name: test shared matrix
on:
  push:
    branches:
      - main

jobs:
  #builder:
  #  name: set matrix
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      cfg:
  #        - data:
  #          - { builder-image: paketobuildpacks/builder-jammy-tiny:0.0.175 }
  #          - { builder-image: paketobuildpacks/builder-jammy-tiny:0.0.173 }
  #  outputs:
  #    matrix: ${{ steps.set-matrix.outputs.matrix }}
  #  steps:
  #    - id: set-matrix
  #      #env:
  #      #  CFG: ${{ toJSON(matrix.cfg) }}
  #      run: |
  #        # jq -r -n  'env.CFG | fromjson | @json "result=\(.data)"'
  #        #echo "name=[{"builder-image":"paketobuildpacks/builder-jammy-tiny:0.0.175"},{"builder-image":"paketobuildpacks/builder-jammy-tiny:0.0.173"}]" >> $GITHUB_OUTPUT
  #        echo "Do nothing"
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          cfg='
          matrix:
            include:
              builder-image: [ 'paketobuildpacks/builder-jammy-tiny:0.0.175' ]
              pack_cli_version: [ 'v0.30.0-rc1' ]
          '
          echo $cfg | yq -o=json >> $GITHUB_OUTPUT
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
    steps:
      - run: |
          echo "Builder image: ${{ matrix.builder-image }}"
          echo "Pack client image: ${{ matrix.pack_cli_version }}"