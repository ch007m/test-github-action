name: test shared matrix
on:
  push:
    branches:
      - main

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Set Matrix Info
        id: set-matrix
        run: |
          echo '{"include": [{"os": "ubuntu-latest", "node_version": "14"},
                             {"os": "ubuntu-latest", "node_version": "16"}]}' >> $GITHUB_ENV
          echo "::set-output name=matrix::$(cat matrix.json)"

  use-matrix:
    needs: set-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}

    steps:
      - name: Print Matrix Values
        run: |
          echo "OS: ${{ matrix.os }}"
          echo "Node Version: ${{ matrix.node_version }}"

  builder:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          set -x
          json_include=$(cat <<EOF | yq -P -o=json -
          include:
            builder-image: [ 'paketobuildpacks/builder-jammy-tiny:0.0.175' ]
            pack_cli_version: [ 'v0.30.0-rc1' ]
          EOF
          )
          json_include_oneline=$(echo $json_include | jq -c . -)
          #echo "matrix=$json_include_oneline" >> $GITHUB_OUTPUT
          echo "matrix={\"include\":{\"builder-image\":\"paketobuildpacks/builder-jammy-tiny:0.0.175\",\"pack_cli_version\":\"v0.30.0-rc1\"}}" >> $GITHUB_OUTPUT

  process:
    needs: builder
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.builder.outputs.matrix) }}
    steps:
      - run: |
          echo "Builder image: ${{ matrix.builder-image }}"
          echo "Pack client image: ${{ matrix.pack_cli_version }}"