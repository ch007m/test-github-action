name: Call a reusable workflow and use its outputs

on:
  workflow_dispatch:

jobs:
  # DO NOT WORK WITH MATRIX
  #job1:
  #  uses: ./.github/workflows/wf_a.yml
  job1:
    name: Generate output
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      firstword: ${{ steps.step1.outputs.firstword }}
      secondword: ${{ steps.step2.outputs.secondword }}
      matrix: ${{ steps.step3.outputs.matrix }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v3

      - id: step1
        run: echo "firstword=hello" >> $GITHUB_OUTPUT

      - id: step2
        run: echo "secondword=world" >> $GITHUB_OUTPUT

      - id: step3
        name: Convert config from YAML to JSON and pass it as value to matrix
        run: |
          matrix="matrix=\"$(yq -P -o=json config.yaml | jq -c .)\""
          echo $matrix
          echo $matrix >> $GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: job1
    #strategy:
    #  matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
    steps:
      - name: Log HelloWorld Message
        run: |
          echo "Message: ${{ needs.job1.outputs.firstword }} ${{ needs.job1.outputs.secondword }}"

      - name: Log matrix & jq it
        run: |  
          jsonMatrix=${{ needs.job1.outputs.matrix }}
          echo "Matrix: $jsonMatrix"
          echo $jsonMatrix | jq -r .

      - name: Log fromJSON(matrix) & jq it
        if: always()
        run: |
          jsonMatrix=${{ fromJSON(needs.job1.outputs.matrix) }}
          echo "Matrix: $jsonMatrix"
          echo $jsonMatrix | jq -r .
